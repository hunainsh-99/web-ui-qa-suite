name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Chromium and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests & collect coverage
        run: |
          source venv/bin/activate
          export CHROME_BIN=/usr/bin/chromium-browser
          python3 -m http.server 8000 &
          pytest --cov=pages --cov-report=xml --cov-report=html

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: reports/report.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/index.html

  perf:
    name: Performance Tests
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install locust flask

      - name: Serve pages via Flask
        run: |
          source venv/bin/activate
          export FLASK_APP=performance/server.py
          flask run --host=0.0.0.0 --port=8000 &

      - name: Run Locust load test
        run: |
          locust -f performance/locustfile.py \
            --host http://127.0.0.1:8000 \
            --headless -u 20 -r 5 --run-time 30s

